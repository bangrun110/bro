local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Coo hub V1.3",
   LoadingTitle = "Coo OT",
   LoadingSubtitle = "สร้างโดย COOHUB",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "W"
   },
   KeySystem = true,
   KeySettings = {
      Title = "Coo Hub - กรุณาใส่คีย์",
      Subtitle = "คีย์จำเป็นต้องใส่ทุกครั้งที่เข้าเกม",
      Note = "กรุณาติดต่อผู้สร้างเพื่อขอคีย์",
      FileName = "hub",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = {
        "coo201-H7Z6", "coo202-K4P3", "coo203-R9T2", "coo204-X5M8", "coo205-B3V7",
        "coo206-N2J9", "coo207-L6F4", "coo208-W1C5", "coo209-G8Y3", "coo210-D7A2",
        "coo211-P5Q9", "coo212-S3E8", "coo213-V6U4", "coo214-T2Z7", "coo215-M9X1",
        "coo216-F5K8", "coo217-C3H6", "coo218-J7R2", "coo219-Y4L9", "coo220-A1N3",
        "coo221-U8B5", "coo222-O6W7", "coo223-I2G4", "coo224-Q9D3", "coo225-E5T1",
        "coo226-Z7X6", "coo227-K3V9", "coo228-P8M2", "coo229-L4F7", "coo230-W6C3",
        "coo231-G1Y5", "coo232-D9A4", "coo233-S7Q2", "coo234-V3E8", "coo235-T5U6",
        "coo236-M2Z9", "coo237-F8X1", "coo238-C6K4", "coo239-J3H7", "coo240-Y9R5",
        "coo241-A7L2", "coo242-U3N6", "coo243-O1B8", "coo244-I5W3", "coo245-Q7G9",
        "coo246-E2D4", "coo247-Z9T1", "coo248-K6X5", "coo249-P4V7", "coo250-L8M2",
        "coo251-W3F9", "coo252-G5C1", "coo253-D2Y6", "coo254-S9A4", "coo255-V7Q3",
        "coo256-T1E8", "coo257-M6U5", "coo258-F2Z9", "coo259-C8X7", "coo260-J4K1",
        "coo261-Y3H6", "coo262-A9R2", "coo263-U5L7", "coo264-O2N4", "coo265-I7B8",
        "coo266-Q3W5", "coo267-E1G9", "coo268-Z6D3", "coo269-K2T7", "coo270-P9X4",
        "coo271-L5V8", "coo272-W1M3", "coo273-G7F6", "coo274-D3C9", "coo275-S8Y2",
        "coo276-V4A7", "coo277-T6Q3", "coo278-M2E8", "coo279-F9U5", "coo280-C1Z4",
        "coo281-J7X6", "coo282-Y3K2", "coo283-A8H9", "coo284-U4R3", "coo285-O6L7",
        "coo286-I2N4", "coo287-Q9B8", "coo288-E5W1", "coo289-Z3G6", "coo290-K8D2",
        "coo291-P4T9", "coo292-L7X3", "coo293-W1V5", "coo294-G6M8", "coo295-D2F4",
        "coo296-S9C7", "coo297-V3Y1", "coo298-T8A5", "coo299-M4Q2", "coo300-F6E9",
        "coo301-B5R8", "coo302-H2X4", "coo303-N7V1", "coo304-P3T9", "coo305-K8L6",
        "coo306-W4M2", "coo307-G9F5", "coo308-D1C7", "coo309-S6Y3", "coo310-V2A8",
        "coo311-T7Q4", "coo312-M3E1", "coo313-F8U6", "coo314-C4Z9", "coo315-J1X7",
        "coo316-Y5K2", "coo317-A2H8", "coo318-U7R4", "coo319-O3L1", "coo320-I9N6",
        "coo321-Q4B2", "coo322-E8W7", "coo323-Z1G3", "coo324-K6D9", "coo325-P2T5",
        "coo326-L7X8", "coo327-W3V4", "coo328-G9M1", "coo329-D4F6", "coo330-S1C2",
        "coo331-V7Y5", "coo332-T2A9", "coo333-M8Q3", "coo334-F4E7", "coo335-C1U2",
        "coo336-J6Z8", "coo337-Y2X4", "coo338-A7K1", "coo339-U3H6", "coo340-O9R2",
        "coo341-I4L7", "coo342-Q1N3", "coo343-E6B8", "coo344-Z2W4", "coo345-K7G9",
        "coo346-P3D5", "coo347-L8T1", "coo348-W4X6", "coo349-G1V2", "coo350-D6M7",
        "coo351-S2F3", "coo352-V7C8", "coo353-T3Y4", "coo354-M9A1", "coo355-F4Q6",
        "coo356-C1E2", "coo357-J6U7", "coo358-Y2Z3", "coo359-A8X4", "coo360-U3K9",
        "coo361-O7H5", "coo362-I2R1", "coo363-Q8L6", "coo364-E3N2", "coo365-Z9B7",
        "coo366-K4W3", "coo367-P1G8", "coo368-L6D4", "coo369-W2T9", "coo370-G7X5",
        "coo371-D3V1", "coo372-S8M6", "coo373-V4F2", "coo374-T1C7", "coo375-M6Y3",
        "coo376-F2A8", "coo377-C7Q4", "coo378-J3E9", "coo379-Y8U5", "coo380-A4Z1",
        "coo381-U1X6", "coo382-O6K2", "coo383-I2H7", "coo384-Q7R3", "coo385-E3L8",
        "coo386-Z9N4", "coo387-K4B1", "coo388-P1W6", "coo389-L6G2", "coo390-W2D7",
        "coo391-G8T3", "coo392-D4X9", "coo393-S1V5", "coo394-V6M2", "coo395-T2F7",
        "coo396-M7C3", "coo397-F3Y8", "coo398-C9A4", "coo399-J4Q1", "coo400-Y1E6"
      }
   }
})

local MainTab = Window:CreateTab("หน้าหลัก", nil)
local MainSection = MainTab:CreateSection("เมนูหลัก")


local AimbotTab = Window:CreateTab("Aimbot", nil)
local AimbotSection = AimbotTab:CreateSection("ระบบเล็งอัตโนมัติ")

local PartyTab = Window:CreateTab("ปาร์ตี้", nil)
local PartySection = PartyTab:CreateSection("ระบบปาร์ตี้")

local SpeedEnabled = false
local SpeedValue = 16
local VerticalSpeed = 0
local IsFlying = false
local IsFrozen = false
local FrozenPosition = nil
local ESPEnabled = false
local ESPObjects = {}

local HideMyName = false

local AimbotEnabled = false
local AimbotActive = false
local FOVRadius = 100
local FOVColorR, FOVColorG, FOVColorB = 255, 255, 255
local TargetPart = "Head" 
local ShowFOVCircle = true 
local ShowCenterDot = true 

local PartyEnabled = false
local PartyMembers = {}
local CurrentPartyInput = ""
local RemovePartyInput = ""

local ShowTargetInfo = false
local TargetInfoText = Drawing.new("Text")
TargetInfoText.Visible = false
TargetInfoText.Size = 18
TargetInfoText.Color = Color3.fromRGB(255, 255, 255)
TargetInfoText.Transparency = 1
TargetInfoText.ZIndex = 1001
TargetInfoText.Center = true
TargetInfoText.Font = 3 

local IsMobile = false
local AutoAimEnabled = false

local HighJumpEnabled = false

local function checkMobile()
    return game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled
end

local aimbotKeyDown = false
local selectedAimbotKey = Enum.KeyCode.LeftShift 
local aimbotKeyName = "LeftShift" 
local isWaitingForKeybindInput = false

local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.NumSides = 60
FOVCircle.Radius = FOVRadius
FOVCircle.Filled = false
FOVCircle.Visible = false
FOVCircle.ZIndex = 999
FOVCircle.Transparency = 1
FOVCircle.Color = Color3.fromRGB(FOVColorR, FOVColorG, FOVColorB)

local CenterDot = Drawing.new("Circle")
CenterDot.Thickness = 1
CenterDot.NumSides = 30
CenterDot.Radius = 2
CenterDot.Filled = true
CenterDot.Visible = false
CenterDot.ZIndex = 1000
CenterDot.Transparency = 1
CenterDot.Color = Color3.fromRGB(255, 0, 0)

local SprintSpeed = 39           -- desired sprint speed
local isSprinting = false        -- track sprint state

local function updateSpeed()
    if SpeedEnabled and game.Players.LocalPlayer.Character then
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if humanoid and rootPart then
            if IsFrozen and FrozenPosition then
                rootPart.CFrame = FrozenPosition
                return
            end
            
            if isSprinting then
                humanoid.WalkSpeed = SprintSpeed
                VerticalSpeed = 0
                IsFlying = false
                return
            end
            
            humanoid.WalkSpeed = SpeedValue
            if humanoid.MoveDirection.Magnitude > 0 then
                local moveDirection = humanoid.MoveDirection * SpeedValue
                rootPart.CFrame = rootPart.CFrame + moveDirection * game:GetService("RunService").Heartbeat:Wait()
            end
            if IsFlying then
                rootPart.CFrame = rootPart.CFrame + Vector3.new(0, VerticalSpeed, 0) * game:GetService("RunService").Heartbeat:Wait()
            end
        end
    end
end

local function toggleMyNameVisibility()
    local localPlayer = game.Players.LocalPlayer
    if localPlayer and localPlayer.Character then
        local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.DisplayName = HideMyName and "" or localPlayer.Name
            humanoid.DisplayDistanceType = HideMyName and Enum.HumanoidDisplayDistanceType.None or Enum.HumanoidDisplayDistanceType.Viewer
            
            local head = localPlayer.Character:FindFirstChild("Head")
            if head then
                for _, gui in pairs(head:GetChildren()) do
                    if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                        gui.Enabled = not HideMyName
                    end
                end
            end
            
            for _, gui in pairs(localPlayer.Character:GetDescendants()) do
                if (gui:IsA("BillboardGui") or gui:IsA("SurfaceGui")) and
                   (gui.Name:match("PlayerName") or gui.Name:match("NameTag") or gui.Name:match("Display") or gui.Name:match("Head")) then
                    gui.Enabled = not HideMyName
                end
                
                if gui:IsA("TextLabel") or gui:IsA("TextButton") then
                    if gui.Text == localPlayer.Name or gui.Text == localPlayer.DisplayName then
                        gui.Visible = not HideMyName
                    end
                end
            end
        end
    end
end

local function getClosestPlayerInFOV()
    local closestPlayer = nil
    local shortestDistance = FOVRadius
    
    local localPlayer = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local centerScreen = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    
    FOVCircle.Position = centerScreen
    CenterDot.Position = centerScreen
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and 
           player.Character and 
           player.Character:FindFirstChild(TargetPart) and 
           player.Character:FindFirstChild("Humanoid") and 
           player.Character.Humanoid.Health > 0 then
            

            local isPartyMember = false
            if PartyEnabled then
                for _, memberName in pairs(PartyMembers) do
                    if player.Name:lower() == memberName:lower() then
                        isPartyMember = true
                        break
                    end
                end
            end
            

            if not isPartyMember then
                local targetPart = player.Character[TargetPart]
                local screenPoint = camera:WorldToScreenPoint(targetPart.Position)
                
                if screenPoint.Z > 0 then
                    local vectorDistance = (centerScreen - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
                    
                    if vectorDistance < shortestDistance then
                        closestPlayer = player
                        shortestDistance = vectorDistance
                    end
                end
            end
        end
    end
    
    return closestPlayer
end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if SpeedEnabled and not gameProcessed then
        if input.KeyCode == Enum.KeyCode.Space then
            if not IsFrozen then
                VerticalSpeed = SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            if not IsFrozen then
                VerticalSpeed = -SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.T then
            IsFrozen = not IsFrozen
            
            if game.Players.LocalPlayer.Character then
                local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                
                if rootPart and humanoid then
                    if IsFrozen then
                        FrozenPosition = rootPart.CFrame
                        humanoid.WalkSpeed = 0
                        VerticalSpeed = 0
                        IsFlying = false
                    else
                        FrozenPosition = nil
                        humanoid.WalkSpeed = SpeedValue
                    end
                end
            end
        elseif input.KeyCode == Enum.KeyCode.LeftShift then
            isSprinting = true
        end
    end
    

    if (input.KeyCode == selectedAimbotKey) or 
       (selectedAimbotKey == Enum.UserInputType.MouseButton1 and input.UserInputType == Enum.UserInputType.MouseButton1) or
       (selectedAimbotKey == Enum.UserInputType.MouseButton2 and input.UserInputType == Enum.UserInputType.MouseButton2) then
        if not isWaitingForKeybindInput then
            aimbotKeyDown = true
        end
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.LeftControl then
        VerticalSpeed = 0
        IsFlying = false
    end
    

    if input.KeyCode == Enum.KeyCode.LeftShift then
        isSprinting = false
    end

    if (input.KeyCode == selectedAimbotKey) or 
       (selectedAimbotKey == Enum.UserInputType.MouseButton1 and input.UserInputType == Enum.UserInputType.MouseButton1) or
       (selectedAimbotKey == Enum.UserInputType.MouseButton2 and input.UserInputType == Enum.UserInputType.MouseButton2) then
        aimbotKeyDown = false
    end
end)

local function createESP(player)
    if player == game.Players.LocalPlayer then return end
    
    if ESPObjects[player] then removeESP(player) end
    
    local espFolder = Instance.new("Folder")
    espFolder.Name = "ESPObjects"
    
    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = Color3.fromRGB(255, 0, 0)
    box.Thickness = 1
    box.Transparency = 1
    box.Filled = false
    
    local nameLabel = Drawing.new("Text")
    nameLabel.Visible = false
    nameLabel.Color = Color3.fromRGB(255, 255, 255)
    nameLabel.Size = 16
    nameLabel.Center = true
    nameLabel.Outline = true
    nameLabel.OutlineColor = Color3.fromRGB(0, 0, 0)
    nameLabel.Font = 3
    
    local healthBarBg = Drawing.new("Square")
    healthBarBg.Visible = false
    healthBarBg.Color = Color3.fromRGB(0, 0, 0)
    healthBarBg.Thickness = 1
    healthBarBg.Transparency = 0.5
    healthBarBg.Filled = true
    
    local healthBar = Drawing.new("Square")
    healthBar.Visible = false
    healthBar.Color = Color3.fromRGB(0, 255, 0)
    healthBar.Thickness = 1
    healthBar.Transparency = 1
    healthBar.Filled = true
    
    local toolLabel = Drawing.new("Text")
    toolLabel.Visible = false
    toolLabel.Color = Color3.fromRGB(255, 255, 0)
    toolLabel.Size = 14
    toolLabel.Center = false
    toolLabel.Outline = true
    toolLabel.OutlineColor = Color3.fromRGB(0, 0, 0)
    toolLabel.Font = 3
    
    ESPObjects[player] = {
        box = box,
        nameLabel = nameLabel,
        healthBarBg = healthBarBg,
        healthBar = healthBar,
        toolLabel = toolLabel,
        player = player
    }
end

local function removeESP(player)
    if ESPObjects[player] then
        if ESPObjects[player].box then
            ESPObjects[player].box:Remove()
        end
        if ESPObjects[player].nameLabel then
            ESPObjects[player].nameLabel:Remove()
        end
        if ESPObjects[player].healthBarBg then
            ESPObjects[player].healthBarBg:Remove()
        end
        if ESPObjects[player].healthBar then
            ESPObjects[player].healthBar:Remove()
        end
        if ESPObjects[player].toolLabel then
            ESPObjects[player].toolLabel:Remove()
        end
        ESPObjects[player] = nil
    end
end

local function updateESP()
    if not ESPEnabled then return end
    
   
    for player, _ in pairs(ESPObjects) do
        if typeof(player) ~= "string" and (not player.Parent or not player:IsDescendantOf(game)) then
            removeESP(player)
        end
    end
    
    local camera = game:GetService("Workspace").CurrentCamera
    
    for player, espData in pairs(ESPObjects) do
        if typeof(player) ~= "string" and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            
            local vector, onScreen = camera:WorldToViewportPoint(hrp.Position)
            
            if onScreen then
                local headPos
                local rootPos = hrp.Position
                
                if player.Character:FindFirstChild("Head") then
                    headPos = player.Character:FindFirstChild("Head").Position
                else
                    headPos = rootPos + Vector3.new(0, 3, 0)
                end
                
                local rootPosOnScreen = camera:WorldToViewportPoint(rootPos)
                local headPosOnScreen = camera:WorldToViewportPoint(headPos)
                
                local boxSize = Vector2.new(
                    math.max(math.abs(headPosOnScreen.X - rootPosOnScreen.X) * 3, 30),
                    math.abs(headPosOnScreen.Y - rootPosOnScreen.Y) * 1.5
                )
                
                local boxPosition = Vector2.new(
                    rootPosOnScreen.X - boxSize.X / 2,
                    rootPosOnScreen.Y - boxSize.Y / 2
                )
                
                espData.box.Size = boxSize
                espData.box.Position = boxPosition
                espData.box.Visible = true
                
                espData.nameLabel.Text = player.Name
                espData.nameLabel.Position = Vector2.new(
                    boxPosition.X + boxSize.X / 2,
                    boxPosition.Y - 20
                )
                espData.nameLabel.Visible = true
                
                local healthBarHeight = boxSize.Y
                local healthBarWidth = 5
                local healthBarPosition = Vector2.new(
                    boxPosition.X - 10,
                    boxPosition.Y
                )
                
                espData.healthBarBg.Size = Vector2.new(healthBarWidth, healthBarHeight)
                espData.healthBarBg.Position = healthBarPosition
                espData.healthBarBg.Visible = true
                
                local healthPercentage = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
                local healthBarFillHeight = healthBarHeight * healthPercentage
                
                espData.healthBar.Size = Vector2.new(healthBarWidth, healthBarFillHeight)
                espData.healthBar.Position = Vector2.new(
                    healthBarPosition.X,
                    healthBarPosition.Y + healthBarHeight - healthBarFillHeight
                )
                espData.healthBar.Visible = true
                
                local red = 1 - healthPercentage
                local green = healthPercentage
                espData.healthBar.Color = Color3.fromRGB(255 * red, 255 * green, 0)
                
                local toolsList = {}
                
                if player.Character then
                    local equippedTool = player.Character:FindFirstChildOfClass("Tool")
                    if equippedTool and equippedTool.Name ~= "Fists" then
                        table.insert(toolsList, "⚔️ " .. equippedTool.Name)
                    end
                end
                
                if player:FindFirstChild("Backpack") then
                    for _, tool in pairs(player.Backpack:GetChildren()) do
                        if tool:IsA("Tool") and tool.Name ~= "Fists" then
                            table.insert(toolsList, "🎒 " .. tool.Name)
                        end
                    end
                end
                
                if #toolsList > 0 then
                    espData.toolLabel.Text = table.concat(toolsList, "\n")
                    espData.toolLabel.Position = Vector2.new(
                        boxPosition.X + boxSize.X + 5,
                        boxPosition.Y
                    )
                    espData.toolLabel.Visible = true
                else
                    espData.toolLabel.Visible = false
                end
                
            else
                espData.box.Visible = false
                espData.nameLabel.Visible = false
                espData.healthBarBg.Visible = false
                espData.healthBar.Visible = false
                espData.toolLabel.Visible = false
            end
        else
            if typeof(player) ~= "string" and ESPObjects[player] then
                espData.box.Visible = false
                espData.nameLabel.Visible = false
                espData.healthBarBg.Visible = false
                espData.healthBar.Visible = false
                espData.toolLabel.Visible = false
            end
        end
    end
end

local function toggleESP(enabled)
    ESPEnabled = enabled
    
    
    for player, _ in pairs(ESPObjects) do
        if typeof(player) ~= "string" then
            removeESP(player)
        end
    end
    
    if ESPEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createESP(player)
            end
        end
        
        if not ESPObjects.PlayerAddedConnection then
            ESPObjects.PlayerAddedConnection = game.Players.PlayerAdded:Connect(function(player)
                if player ~= game.Players.LocalPlayer then
                    createESP(player)
                end
            end)
        end
        
        if not ESPObjects.PlayerRemovingConnection then
            ESPObjects.PlayerRemovingConnection = game.Players.PlayerRemoving:Connect(function(player)
                removeESP(player)
            end)
        end
        
        if not ESPObjects.RenderSteppedConnection then
            ESPObjects.RenderSteppedConnection = game:GetService("RunService").RenderStepped:Connect(updateESP)
        end
    else

        if ESPObjects.PlayerAddedConnection then
            ESPObjects.PlayerAddedConnection:Disconnect()
            ESPObjects.PlayerAddedConnection = nil
        end
        
        if ESPObjects.PlayerRemovingConnection then
            ESPObjects.PlayerRemovingConnection:Disconnect()
            ESPObjects.PlayerRemovingConnection = nil
        end
        
        if ESPObjects.RenderSteppedConnection then
            ESPObjects.RenderSteppedConnection:Disconnect()
            ESPObjects.RenderSteppedConnection = nil
        end
        

        for k in pairs(ESPObjects) do
            ESPObjects[k] = nil
        end
    end
end

local function updateMobileAimbot()
    if not IsMobile or not AimbotEnabled then return end
    

    local camera = game.Workspace.CurrentCamera
    local viewportSize = camera.ViewportSize
    local centerX = viewportSize.X / 2
    local centerY = viewportSize.Y / 2
    

    if FOVCircle and ShowFOVCircle then
        FOVCircle.Position = Vector2.new(centerX, centerY)
        FOVCircle.Visible = true
        FOVCircle.ZIndex = 1000 
    end
    
    if CenterDot and ShowCenterDot then
        CenterDot.Position = Vector2.new(centerX, centerY)
        CenterDot.Visible = true
        CenterDot.ZIndex = 1001 
    end
    

    local target = getClosestPlayerInFOV()
    if target and target.Character and target.Character:FindFirstChild(TargetPart) then
        local targetPosition = target.Character[TargetPart].Position
        
        if AimbotSmoothing > 1 then
            local currentCFrame = camera.CFrame
            local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            local smoothingFactor = 1 / AimbotSmoothing * AimbotSensitivity
            camera.CFrame = currentCFrame:Lerp(targetCFrame, smoothingFactor)
        else
            camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
        end
    end
end

IsMobile = checkMobile()

local SpeedToggle = MainTab:CreateToggle({
   Name = "เปิดระบบวิ่ง/บิน",
   CurrentValue = false,
   Flag = "SpeedToggle",
   Callback = function(Value)
      SpeedEnabled = Value
      VerticalSpeed = 0
      IsFlying = false
      
      if not SpeedEnabled then
         if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
         end
      end
   end,
})

local JumpToggle = MainTab:CreateToggle({
   Name = "เปิดระบบกระโดดสูง (75)",
   CurrentValue = false,
   Flag = "JumpToggle",
   Callback = function(Value)
      HighJumpEnabled = Value
      local char = game.Players.LocalPlayer.Character
      if char then
         local humanoid = char:FindFirstChildOfClass("Humanoid")
         if humanoid then
            humanoid.UseJumpPower = true
            humanoid.JumpPower = Value and 75 or 50
         end
      end
   end,
})

local ESPToggle = MainTab:CreateToggle({
   Name = "แสดงตำแหน่งผู้เล่น (ESP)",
   CurrentValue = false,
   Flag = "ESPToggle",
   Callback = function(Value)
      toggleESP(Value)
   end,
})

local MyNameToggle = MainTab:CreateToggle({
   Name = "ซ่อนชื่อของฉัน",
   CurrentValue = false,
   Flag = "MyNameToggle",
   Callback = function(Value)
      HideMyName = Value
      toggleMyNameVisibility()
   end,
})

local SpeedSlider = MainTab:CreateSlider({
   Name = "ความเร็วในการวิ่ง",
   Range = {16, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "SpeedSlider",
   Callback = function(Value)
      SpeedValue = Value
   end,
})

game:GetService("RunService").Heartbeat:Connect(function()
    if SpeedEnabled then
        updateSpeed()
    end

    if HighJumpEnabled and game.Players.LocalPlayer.Character then
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.JumpPower ~= 75 then
            humanoid.UseJumpPower = true
            humanoid.JumpPower = 75
        end
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if AimbotEnabled then
        local camera = game.Workspace.CurrentCamera
        local viewportSize = camera.ViewportSize
        
        FOVCircle.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        CenterDot.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        
        local target = getClosestPlayerInFOV()
        
        if ShowTargetInfo and target and target.Character and target.Character:FindFirstChild(TargetPart) then
            TargetInfoText.Visible = true
            TargetInfoText.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2 + FOVRadius + 20)
            TargetInfoText.Text = "Target: " .. target.Name .. " | Health: " .. math.floor(target.Character.Humanoid.Health)
        else
            TargetInfoText.Visible = false
        end
        
        local isAimbotActive = false
        
        if IsMobile then
            
            isAimbotActive = true
        else
           
            isAimbotActive = aimbotKeyDown
        end
        
        if isAimbotActive then
            if target and target.Character and target.Character:FindFirstChild(TargetPart) then
                local targetPosition = target.Character[TargetPart].Position
                
                if AimbotSmoothing > 1 then
                    local currentCFrame = camera.CFrame
                    local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                    
                    local smoothingFactor = 1 / AimbotSmoothing
                    local sensitivityFactor = smoothingFactor * AimbotSensitivity
                    
                    sensitivityFactor = math.clamp(sensitivityFactor, 0, 1)
                    
                    local smoothedCFrame = currentCFrame:Lerp(targetCFrame, sensitivityFactor)
                    camera.CFrame = smoothedCFrame
                else
                    local currentCFrame = camera.CFrame
                    local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                    
                    local sensitivityFactor = AimbotSensitivity
                    
                    sensitivityFactor = math.clamp(sensitivityFactor, 0, 1)
                    
                    local adjustedCFrame = currentCFrame:Lerp(targetCFrame, sensitivityFactor)
                    camera.CFrame = adjustedCFrame
                end
            end
        end
    else
        TargetInfoText.Visible = false
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    wait(0.5)
    if SpeedEnabled then
        updateSpeed()
    end
    
    if HideMyName then
        toggleMyNameVisibility()
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(char)
        wait(0.5)
    end)
end)

game.Players.PlayerRemoving:Connect(function(player)
   
    removeESP(player)
end)

if game.Players.LocalPlayer.Character then
    if HideMyName then
        toggleMyNameVisibility()
    end
end

local AimbotToggle = AimbotTab:CreateToggle({
   Name = "เปิดระบบเล็งอัตโนมัติ",
   CurrentValue = false,
   Flag = "AimbotToggle",
   Callback = function(Value)
      AimbotEnabled = Value
      FOVCircle.Visible = Value and ShowFOVCircle 
      CenterDot.Visible = Value and ShowCenterDot 
   end,
})

local FOVSlider = AimbotTab:CreateSlider({
   Name = "ขนาดวงกลม FOV",
   Range = {50, 400},
   Increment = 10,
   Suffix = "px",
   CurrentValue = 100,
   Flag = "FOVSlider",
   Callback = function(Value)
      FOVRadius = Value
      FOVCircle.Radius = Value
   end,
})


local KeybindDisplay = AimbotTab:CreateLabel("ปุ่มที่ใช้งานปัจจุบัน: Shift")

local SetKeybindButton = AimbotTab:CreateButton({
   Name = "กดเพื่อตั้งค่าปุ่ม Aimbot",
   Callback = function()
      KeybindDisplay:Set("กำลังรอกดปุ่ม... (กดปุ่มใดก็ได้ที่ต้องการใช้)")
      isWaitingForKeybindInput = true
      
      local connection
      connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
         if isWaitingForKeybindInput then
            if input.UserInputType == Enum.UserInputType.Keyboard then
               selectedAimbotKey = input.KeyCode
               aimbotKeyName = tostring(input.KeyCode)
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: " .. aimbotKeyName)
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
               selectedAimbotKey = Enum.UserInputType.MouseButton1
               aimbotKeyName = "LeftClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: คลิกซ้าย")
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
               selectedAimbotKey = Enum.UserInputType.MouseButton2
               aimbotKeyName = "RightClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: คลิกขวา")
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
               selectedAimbotKey = Enum.UserInputType.MouseButton3
               aimbotKeyName = "MiddleClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: " .. aimbotKeyName)
               aimbotKeyDown = false
            end
            
            isWaitingForKeybindInput = false
            connection:Disconnect()
         end
      end)
   end,
})

local ResetKeybindButton = AimbotTab:CreateButton({
   Name = "คืนค่าเริ่มต้น (Shift)",
   Callback = function()
      selectedAimbotKey = Enum.KeyCode.LeftShift
      aimbotKeyName = "LeftShift"
      KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: Shift")
      aimbotKeyDown = false
      isWaitingForKeybindInput = false
   end,
})


local FOVColorPicker = AimbotTab:CreateColorPicker({
    Name = "สีวงกลม FOV",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "FOVColorPicker",
    Callback = function(Value)
        FOVCircle.Color = Value
    end
})

local MobileAimbotLabel = AimbotTab:CreateLabel("หากใช้งานบนมือถือ ระบบ Aimbot จะทำงานอัตโนมัติเมื่อเปิดใช้งาน")

local PartyToggle = PartyTab:CreateToggle({
   Name = "เปิดใช้งานระบบปาร์ตี้",
   CurrentValue = false,
   Flag = "PartyToggle",
   Callback = function(Value)
      PartyEnabled = Value
   end,
})

local PartyInput = PartyTab:CreateInput({
   Name = "ชื่อผู้เล่น",
   PlaceholderText = "ใส่ชื่อผู้เล่นที่ต้องการเพิ่มในปาร์ตี้",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
      CurrentPartyInput = Text
   end,
})

local PartyAddButton = PartyTab:CreateButton({
   Name = "เพิ่มผู้เล่นในปาร์ตี้",
   Callback = function()
      if CurrentPartyInput ~= "" then
         local playerExists = false
         for _, player in pairs(game.Players:GetPlayers()) do
            if player.Name:lower() == CurrentPartyInput:lower() then
               playerExists = true
               CurrentPartyInput = player.Name
               break
            end
         end
         
         local alreadyInParty = false
         for _, memberName in pairs(PartyMembers) do
            if memberName:lower() == CurrentPartyInput:lower() then
               alreadyInParty = true
               break
            end
         end
         
         if not alreadyInParty then
            table.insert(PartyMembers, CurrentPartyInput)
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = "เพิ่ม " .. CurrentPartyInput .. " เข้าปาร์ตี้แล้ว" .. (playerExists and "" or " (ผู้เล่นอาจไม่ได้อยู่ในเกม)"),
               Duration = 3,
            })
            
            updatePartyList()
         else
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = CurrentPartyInput .. " อยู่ในปาร์ตี้อยู่แล้ว",
               Duration = 3,
            })
         end
      else
         Rayfield:Notify({
            Title = "ระบบปาร์ตี้",
            Content = "กรุณาใส่ชื่อผู้เล่นก่อน",
            Duration = 3,
         })
      end
   end,
})

local PartyListLabel = PartyTab:CreateLabel("สมาชิกปาร์ตี้: ไม่มีสมาชิก")

function updatePartyList()
    if #PartyMembers == 0 then
        PartyListLabel:Set("สมาชิกปาร์ตี้: ไม่มีสมาชิก")
    else
        local membersList = "สมาชิกปาร์ตี้: " .. table.concat(PartyMembers, ", ")
        PartyListLabel:Set(membersList)
    end
end

local PartyClearButton = PartyTab:CreateButton({
   Name = "ลบสมาชิกทั้งหมด",
   Callback = function()
      PartyMembers = {}
      updatePartyList()
      Rayfield:Notify({
         Title = "ระบบปาร์ตี้",
         Content = "ลบสมาชิกทั้งหมดออกจากปาร์ตี้แล้ว",
         Duration = 3,
      })
   end,
})

local PartyRemoveInput = PartyTab:CreateInput({
   Name = "ลบผู้เล่นออกจากปาร์ตี้",
   PlaceholderText = "ใส่ชื่อผู้เล่นที่ต้องการลบออกจากปาร์ตี้",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
      RemovePartyInput = Text
   end,
})

local PartyRemoveButton = PartyTab:CreateButton({
   Name = "ลบผู้เล่น",
   Callback = function()
      if RemovePartyInput ~= "" then
         local removed = false
         for i, memberName in pairs(PartyMembers) do
            if memberName:lower() == RemovePartyInput:lower() then
               table.remove(PartyMembers, i)
               removed = true
               break
            end
         end
         
         if removed then
            updatePartyList()
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = "ลบ " .. RemovePartyInput .. " ออกจากปาร์ตี้แล้ว",
               Duration = 3,
            })
         else
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = "ไม่พบ " .. RemovePartyInput .. " ในปาร์ตี้",
               Duration = 3,
            })
         end
      else
         Rayfield:Notify({
            Title = "ระบบปาร์ตี้",
            Content = "กรุณาใส่ชื่อผู้เล่นก่อน",
            Duration = 3,
         })
      end
   end,
})

local nameHidingHeartbeat = game:GetService("RunService").Heartbeat:Connect(function()
    if HideMyName then
        if game.Players.LocalPlayer.Character then
            for _, gui in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if (gui:IsA("BillboardGui") or gui:IsA("SurfaceGui")) and
                   (gui.Name:match("PlayerName") or gui.Name:match("NameTag") or gui.Name:match("Display") or gui.Name:match("Head")) then
                    if gui.Enabled then
                        gui.Enabled = false
                    end
                end
            end
        end
    end
end)

game.Players.LocalPlayer.CharacterRemoving:Connect(function()
    if nameHidingHeartbeat then
        nameHidingHeartbeat:Disconnect()
    end
end)
